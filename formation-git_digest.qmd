---
title: "Formation Git et Gitlab"
subtitle: "Diaporama au format digest à destination de la hiérarchie"
date: today
date-format: "DD/MM/YYYY"
author: "SSP/DEMESIS"
description: |
  Support de formation au format digest de Git pour les utilisateurs de R au MASA

slide-tone: false # for blind readers
chalkboard: false # press the B key to toggle chalkboard
transition: slide
fig-cap-location: bottom

toc: true
toc-title: Sommaire
toc-depth: 1
toc-float: true

# multiplex: true
execute:
  echo: false
  warning: false
  cache: false
editor:
  render-on-save: true
---

## Le contrôle de version

### Principe général :

Le versioning consiste à conserver la version d'une entité logicielle quelconque 
de façon à pouvoir la retrouver facilement même après l'apparition et la mise 
en place de versions plus récentes.

### Sans contrôle de version

Exemple de ce que l'on peut trouver sur un server :  

![](img/cerise_sans_versionning.png)

## Pourquoi faire du contrôle de version ?

**Le versioning permet de :**  

- **Travailler collectivement** sur les mêmes fichiers **en même temps**  
- Obtenir de **la traçabilité** : on sait qui a changé quoi, quand, comment et pourquoi
- **L'expérimentation** lors des développements sans risques (à l'aide des branches)
- Faire de la **relecture** (revues de codes...)
- **Voyager dans le temps**

[**Avec une forge comme gitlab, il permet en plus de :**]{.red}  

- [D'archiver le code]{.red}  
- [D'apporter de la visibilité à vos projets]{.red}  

**=> Un usage qui se justifie même quand on est tout seul sur un projet !** 

## Qu'est-ce qu'on versionne ?

<p style="text-align: center;">[On versionne les fichiers de type texte]{.content-box-green}</p>

Par exemple :

-   Les programmes R, Python, SAS...\
-   La documentation au format texte, Markdown...\
-   Les fichiers quarto, Rmarkdown...\
-   Les fichiers de configuration de type yaml par exemple...

[Tout le reste n'est pas (sauf exception) versionné !]{.red}

## Points abordés dans la formation

- Notions de bases sur le fonctionnement et l'intérêt du contrôle de version
- Configuration de Git sous Cerise et de sa liaison avec la [forge interne Gitlab](https://forge.agriculture.rie.gouv.fr/gitlab/)
- Utilisation de Git au quotidien avec l'essentiel des commandes
- Présentation des fonctionnalités majeures de Gitlab (groupes, système de ticketing, tableau kanban...)
- Comment revenir en arrière dans son projet ?
- Comment travailler à plusieurs sur un même projet (notions de branches, workflow, conflits...)

[Quelques exercices pratiques accompagnent la formation pour que les participants puissent mettre en pratique les notions abordées.]{.souligneRouge}

## Calendrier des formations à venir

Lien vers le diaporama complet : [c'est ici](https://ddotta.github.io/formation-git/#/title-slide)  

Des formations prévues :  

- Fin juin : à Toulouse
- Mi septembre : à Paris

En tant que nouvelle formation au catalogue du MASA, le nombre de places n'est pas limité et plusieurs sessions de formations pourront avoir lieu d'ici fin 2024.