---
title: "Git et Gitlab"
subtitle: "Sensibilisation de l'encadrement du SSP"
date: today
date-format: "07/05/2024"
author: "DEMESIS/PAOS - Damien Dotta"
description: |
  Support de formation au format digest de Git pour les utilisateurs de R au MASA

slide-tone: false # for blind readers
chalkboard: false # press the B key to toggle chalkboard
transition: slide
fig-cap-location: bottom

toc: true
toc-title: Sommaire
toc-depth: 1
toc-float: true

# multiplex: true
execute:
  echo: false
  warning: false
  cache: false
editor:
  render-on-save: true
---

## Le contrôle de version

### Principe général :

Le versioning consiste à conserver la version d'une entité logicielle quelconque 
de façon à pouvoir la retrouver facilement même après l'apparition et la mise 
en place de versions plus récentes.

### Sans outil de contrôle de version

::: columns
::: {.column width="35%"}
Exemple de ce que l'on peut trouver sur un server :  
:::

::: {.column width="65%"}
![](img/cerise_sans_versionning.png){fig-align="center"}  
:::

::::


## Pourquoi faire du contrôle de version ?

**Le versioning permet de :**  

- Obtenir de **la traçabilité** : on sait qui a changé quoi, quand, comment et pourquoi => cf. [exemple sur l'IPPAP](https://forge.agriculture.rie.gouv.fr/gitlab/ssp/bmis/ippap/-/issues/75){target="_blank"}  
- **Travailler collectivement** sur les mêmes programmes **en même temps** => cf. [ici](https://ddotta.github.io/formation-git/#/git---un-mod%C3%A8le-distribu%C3%A9){target="_blank"}    
- **L'expérimentation** lors des développements sans risques (à l'aide des branches) => cf. [ici](https://ddotta.github.io/formation-git/#/d%C3%A9finition-des-branches){target="_blank"}  
- Faire de la **relecture** (revues de codes...) cf. [ici](https://ddotta.github.io/formation-git/#/les-relectures-ou-revues-de-code-avec-gitlab-12){target="_blank"}  
- **Revenir en arrière** cf. [ici](https://ddotta.github.io/formation-git/#/revenir-en-arri%C3%A8re-avec-gitlab-13){target="_blank"}  

[**Avec une forge comme gitlab, il permet en plus de :**]{.red}  

- [D'archiver le code]{.red}  
- [Partager le code au sein d'une communauté]{.red}  

## Qu'est-ce qu'on versionne ?

<br>

<p style="text-align: center;">[On versionne les fichiers de type texte]{.content-box-green}</p>

Par exemple :

-   Les programmes R, Python, SAS...\
-   La documentation au format texte, Markdown...\
-   Les fichiers quarto, Rmarkdown...\
-   Les fichiers de configuration de type yaml par exemple...

[Tout le reste n'est pas (sauf exception) versionné !]{.red}

## Points abordés dans la formation

- Notions de bases sur le fonctionnement et l'intérêt du contrôle de version
- Configuration de Git sous Cerise et de sa liaison avec la [forge interne Gitlab](https://forge.agriculture.rie.gouv.fr/gitlab/)
- Utilisation de Git au quotidien avec l'essentiel des commandes
- Présentation des fonctionnalités majeures de Gitlab (groupes, système de ticketing, tableau kanban...)
- Comment restaurer un état précédent de son projet ?
- Comment travailler à plusieurs sur un même projet (notions de branches, workflow, conflits...)

[Quelques exercices pratiques accompagnent la formation pour que les participants puissent mettre en pratique les notions abordées.]{.souligneRouge}

## Outils utilisés

L'apprentissage de Git pendant les formations se fera avec les 3 outils suivants :  

<br>

::: columns
::: {.column width="33%"}
![](img/icone_rstudio.png){fig-align="center"}  

Avec RStudio déjà installé sous Cerise pour <u>les commandes essentielles.</u> 

:::

::: {.column width="33%"}
![](img/icone_terminal.png){fig-align="center"}  

Avec le terminal disponible sous Cerise pour <u>les commandes plus spécifiques.</u> 

:::

::: {.column width="33%"}
![](img/icone_gitssp.png){fig-align="center"}  

Avec le package R `gitssp` pour utiliser Git <u>avec des fonctions R.</u> 

:::

::::

<br>

![](img/icone_gitlab.png){fig-align="center"}   

Les fonctionnalités de la forge interne Gitlab seront également présentées pour illustrer les concepts présentés. 


## Calendrier des formations à venir

**Lien vers le diaporama complet :** [c'est ici](https://ddotta.github.io/formation-git/#/title-slide)  

Des formations prévues en 2024 :  

- Fin juin : à Toulouse
- Fin septembre : à Paris
- Mi octobre : à Lyon

En tant que nouvelle formation au catalogue du SSP, le nombre de places est limité par session. Cependant le nombre de formations pourra être augmenté pour répondre au besoin si nécessaire.